// ! functions
// функции позволяют переиспользовать написаный код
// помогают организовывать и структурировать код

// * funtction declaration
// объявление функции
// это план действий, что должно произойти,
// если функция будет вызвана
// * value - это параметр функции
function greeting(value) {
  console.log("просто вывод в консоль!");
  return "hello, " + value + "!";
}

// вызов функции - только так код в функции сработает
// за value в круглых скобках мы передаём желаемое значение
const artem = greeting("Artem");
const dace = greeting("Dace");

console.log(artem);
console.log(dace);

// если у функции нет возвращённого значения - она возвращает undefined

// * arrow functions - стрелочные функции
// короткая запись для функций
// название функции - будет название переменно,
// куда мы кладём стрелочную функцию
// ! короткая стрелочная функция в одну строчку автоматически возвращает значения после "=>"
const sum = (a, b) => a + b;

const result = sum(13, 44);

const result1 = sum("Привет, ", "студенты!");

console.log(result);
console.log(result1);

// ! если требуется несколько строчек - мы пишем фигурные скобки и нам нужен return
//  фигурные скобки обязательны, если действий много и их не выполнить в одну строку
const multiply = (a, b, c) => {
  const res = a * b * c;
  return "Результат умножения: " + res;
}

const result2 = multiply(8, 10, 2);
console.log(result2);
